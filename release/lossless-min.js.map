{"version":3,"sources":["../src/main.ts","../src/component-spec.ts","../src/data-stream.ts","../src/frame-header.ts","../src/utils.ts","../src/huffman-table.ts","../src/quantization-table.ts","../src/scan-component.ts","../src/scan-header.ts","../src/decoder.ts"],"sourcesContent":["export { ComponentSpec } from './component-spec.js'\nexport { DataStream } from './data-stream.js'\nexport { Decoder } from './decoder.js'\nexport { FrameHeader } from './frame-header.js'\nexport { HuffmanTable } from './huffman-table.js'\nexport { QuantizationTable } from './quantization-table.js'\nexport { ScanComponent } from './scan-component.js'\nexport { ScanHeader } from './scan-header.js'\nexport * as Utils from './utils.js'\n","export const ComponentSpec = {\n  hSamp: 0,\n  quantTableSel: 0,\n  vSamp: 0\n}\n","export class DataStream {\n  buffer: Uint8Array\n  index: number\n\n  constructor(data: ArrayBuffer, offset?: number, length?: number) {\n    this.buffer = new Uint8Array(data, offset, length)\n    this.index = 0\n  }\n\n  get16() {\n    // var value = this.buffer.getUint16(this.index, false);\n    const value = (this.buffer[this.index] << 8) + this.buffer[this.index + 1] // DataView is big-endian by default\n    this.index += 2\n    return value\n  }\n\n  get8() {\n    // var value = this.buffer.getUint8(this.index);\n    const value = this.buffer[this.index]\n    this.index += 1\n    return value\n  }\n}\n","import { ComponentSpec } from './component-spec.js'\nimport { DataStream } from './data-stream.js'\n\nexport class FrameHeader {\n  dimX = 0\n  dimY = 0\n  numComp = 0\n  precision = 0\n  components: Array<typeof ComponentSpec> = []\n\n  read(data: DataStream) {\n    let count = 0\n    let temp\n\n    const length = data.get16()\n    count += 2\n\n    this.precision = data.get8()\n    count += 1\n\n    this.dimY = data.get16()\n    count += 2\n\n    this.dimX = data.get16()\n    count += 2\n\n    this.numComp = data.get8()\n    count += 1\n    for (let i = 1; i <= this.numComp; i += 1) {\n      if (count > length) {\n        throw new Error('ERROR: frame format error')\n      }\n\n      const c = data.get8()\n      count += 1\n\n      if (count >= length) {\n        throw new Error('ERROR: frame format error [c>=Lf]')\n      }\n\n      temp = data.get8()\n      count += 1\n\n      if (!this.components[c]) {\n        this.components[c] = { ...ComponentSpec }\n      }\n\n      this.components[c].hSamp = temp >> 4\n      this.components[c].vSamp = temp & 0x0f\n      this.components[c].quantTableSel = data.get8()\n      count += 1\n    }\n\n    if (count !== length) {\n      throw new Error('ERROR: frame format error [Lf!=count]')\n    }\n\n    return 1\n  }\n}\n","type NestedArray<T> = Array<T | NestedArray<T>>\n\n// https://stackoverflow.com/a/12588826\nexport const createArray = (...dimensions: number[]): NestedArray<number> => {\n  if (dimensions.length > 1) {\n    const dim = dimensions[0]\n    const rest = dimensions.slice(1)\n    const newArray = []\n    for (let i = 0; i < dim; i++) {\n      newArray[i] = createArray(...rest)\n    }\n    return newArray\n  } else {\n    return Array(dimensions[0]).fill(undefined)\n  }\n}\n\n// http://stackoverflow.com/questions/18638900/javascript-crc32\nexport const makeCRCTable = function () {\n  let c\n  const crcTable = []\n  for (let n = 0; n < 256; n++) {\n    c = n\n    for (let k = 0; k < 8; k++) {\n      c = c & 1 ? 0xedb88320 ^ (c >>> 1) : c >>> 1\n    }\n    crcTable[n] = c\n  }\n  return crcTable\n}\n\nexport const crcTable = makeCRCTable()\n\nexport const crc32 = function (buffer: ArrayBuffer) {\n  const uint8view = new Uint8Array(buffer)\n  let crc = 0 ^ -1\n\n  for (let i = 0; i < uint8view.length; i++) {\n    crc = (crc >>> 8) ^ crcTable[(crc ^ uint8view[i]) & 0xff]\n  }\n\n  return (crc ^ -1) >>> 0\n}\n","import { DataStream } from './data-stream.js'\nimport { createArray } from './utils.js'\n\nexport class HuffmanTable {\n  static MSB = 0x80000000\n\n  l: number[][][]\n  th: number[]\n  v: number[][][][]\n  tc: number[][]\n\n  constructor() {\n    this.l = createArray(4, 2, 16) as number[][][]\n    this.th = [0, 0, 0, 0]\n    this.v = createArray(4, 2, 16, 200) as number[][][][]\n    this.tc = [\n      [0, 0],\n      [0, 0],\n      [0, 0],\n      [0, 0]\n    ]\n  }\n\n  read(data: DataStream, HuffTab: number[][][]) {\n    let count = 0\n    let temp\n    let t\n    let c\n    let i\n    let j\n\n    const length = data.get16()\n    count += 2\n\n    while (count < length) {\n      temp = data.get8()\n      count += 1\n      t = temp & 0x0f\n      if (t > 3) {\n        throw new Error('ERROR: Huffman table ID > 3')\n      }\n\n      c = temp >> 4\n      if (c > 2) {\n        throw new Error('ERROR: Huffman table [Table class > 2 ]')\n      }\n\n      this.th[t] = 1\n      this.tc[t][c] = 1\n\n      for (i = 0; i < 16; i += 1) {\n        this.l[t][c][i] = data.get8()\n        count += 1\n      }\n\n      for (i = 0; i < 16; i += 1) {\n        for (j = 0; j < this.l[t][c][i]; j += 1) {\n          if (count > length) {\n            throw new Error('ERROR: Huffman table format error [count>Lh]')\n          }\n\n          this.v[t][c][i][j] = data.get8()\n          count += 1\n        }\n      }\n    }\n\n    if (count !== length) {\n      throw new Error('ERROR: Huffman table format error [count!=Lf]')\n    }\n\n    for (i = 0; i < 4; i += 1) {\n      for (j = 0; j < 2; j += 1) {\n        if (this.tc[i][j] !== 0) {\n          this.buildHuffTable(HuffTab[i][j], this.l[i][j], this.v[i][j])\n        }\n      }\n    }\n\n    return 1\n  }\n\n  //\tBuild_HuffTab()\n  //\tParameter:  t       table ID\n  //\t            c       table class ( 0 for DC, 1 for AC )\n  //\t            L[i]    # of codewords which length is i\n  //\t            V[i][j] Huffman Value (length=i)\n  //\tEffect:\n  //\t    build up HuffTab[t][c] using L and V.\n  buildHuffTable(tab: number[], L: number[], V: number[][]) {\n    let currentTable, k, i, j, n\n    const temp = 256\n    k = 0\n\n    for (i = 0; i < 8; i += 1) {\n      // i+1 is Code length\n      for (j = 0; j < L[i]; j += 1) {\n        for (n = 0; n < temp >> (i + 1); n += 1) {\n          tab[k] = V[i][j] | ((i + 1) << 8)\n          k += 1\n        }\n      }\n    }\n\n    for (i = 1; k < 256; i += 1, k += 1) {\n      tab[k] = i | HuffmanTable.MSB\n    }\n\n    currentTable = 1\n    k = 0\n\n    for (i = 8; i < 16; i += 1) {\n      // i+1 is Code length\n      for (j = 0; j < L[i]; j += 1) {\n        for (n = 0; n < temp >> (i - 7); n += 1) {\n          tab[currentTable * 256 + k] = V[i][j] | ((i + 1) << 8)\n          k += 1\n        }\n\n        if (k >= 256) {\n          if (k > 256) {\n            throw new Error('ERROR: Huffman table error(1)!')\n          }\n\n          k = 0\n          currentTable += 1\n        }\n      }\n    }\n  }\n}\n","import { DataStream } from './data-stream.js'\nimport { createArray } from './utils.js'\n\nexport class QuantizationTable {\n  precision: number[] = [] // Quantization precision 8 or 16\n  tq = [0, 0, 0, 0] // 1: this table is presented\n  quantTables: number[][] = createArray(4, 64) as number[][] // Tables\n\n  static enhanceQuantizationTable = function (qtab: number[], table: number[]) {\n    for (let i = 0; i < 8; i += 1) {\n      qtab[table[0 * 8 + i]] *= 90\n      qtab[table[4 * 8 + i]] *= 90\n      qtab[table[2 * 8 + i]] *= 118\n      qtab[table[6 * 8 + i]] *= 49\n      qtab[table[5 * 8 + i]] *= 71\n      qtab[table[1 * 8 + i]] *= 126\n      qtab[table[7 * 8 + i]] *= 25\n      qtab[table[3 * 8 + i]] *= 106\n    }\n\n    for (let i = 0; i < 8; i += 1) {\n      qtab[table[0 + 8 * i]] *= 90\n      qtab[table[4 + 8 * i]] *= 90\n      qtab[table[2 + 8 * i]] *= 118\n      qtab[table[6 + 8 * i]] *= 49\n      qtab[table[5 + 8 * i]] *= 71\n      qtab[table[1 + 8 * i]] *= 126\n      qtab[table[7 + 8 * i]] *= 25\n      qtab[table[3 + 8 * i]] *= 106\n    }\n\n    for (let i = 0; i < 64; i += 1) {\n      qtab[i] >>= 6\n    }\n  }\n\n  read(data: DataStream, table: number[]) {\n    let count = 0\n    let temp\n    let t\n    let i\n\n    const length = data.get16()\n    count += 2\n\n    while (count < length) {\n      temp = data.get8()\n      count += 1\n      t = temp & 0x0f\n\n      if (t > 3) {\n        throw new Error('ERROR: Quantization table ID > 3')\n      }\n\n      this.precision[t] = temp >> 4\n\n      if (this.precision[t] === 0) {\n        this.precision[t] = 8\n      } else if (this.precision[t] === 1) {\n        this.precision[t] = 16\n      } else {\n        throw new Error('ERROR: Quantization table precision error')\n      }\n\n      this.tq[t] = 1\n\n      if (this.precision[t] === 8) {\n        for (i = 0; i < 64; i += 1) {\n          if (count > length) {\n            throw new Error('ERROR: Quantization table format error')\n          }\n\n          this.quantTables[t][i] = data.get8()\n          count += 1\n        }\n\n        QuantizationTable.enhanceQuantizationTable(this.quantTables[t], table)\n      } else {\n        for (i = 0; i < 64; i += 1) {\n          if (count > length) {\n            throw new Error('ERROR: Quantization table format error')\n          }\n\n          this.quantTables[t][i] = data.get16()\n          count += 2\n        }\n\n        QuantizationTable.enhanceQuantizationTable(this.quantTables[t], table)\n      }\n    }\n\n    if (count !== length) {\n      throw new Error('ERROR: Quantization table error [count!=Lq]')\n    }\n\n    return 1\n  }\n}\n","export const ScanComponent = {\n  acTabSel: 0, // AC table selector\n  dcTabSel: 0, // DC table selector\n  scanCompSel: 0 // Scan component selector\n}\n","import { DataStream } from './data-stream.js'\nimport { ScanComponent } from './scan-component.js'\n\nexport class ScanHeader {\n  ah = 0\n  al = 0\n  numComp = 0 // Number of components in the scan\n  selection = 0 // Start of spectral or predictor selection\n  spectralEnd = 0 // End of spectral selection\n  components: Array<typeof ScanComponent> = []\n\n  read(data: DataStream) {\n    let count = 0\n    let i\n    let temp\n\n    const length = data.get16()\n    count += 2\n\n    this.numComp = data.get8()\n    count += 1\n\n    for (i = 0; i < this.numComp; i += 1) {\n      this.components[i] = { ...ScanComponent }\n\n      if (count > length) {\n        throw new Error('ERROR: scan header format error')\n      }\n\n      this.components[i].scanCompSel = data.get8()\n      count += 1\n\n      temp = data.get8()\n      count += 1\n\n      this.components[i].dcTabSel = temp >> 4\n      this.components[i].acTabSel = temp & 0x0f\n    }\n\n    this.selection = data.get8()\n    count += 1\n\n    this.spectralEnd = data.get8()\n    count += 1\n\n    temp = data.get8()\n    this.ah = temp >> 4\n    this.al = temp & 0x0f\n    count += 1\n\n    if (count !== length) {\n      throw new Error('ERROR: scan header format error [count!=Ns]')\n    }\n\n    return 1\n  }\n}\n","import { ComponentSpec } from './component-spec.js'\nimport { DataStream } from './data-stream.js'\nimport { FrameHeader } from './frame-header.js'\nimport { HuffmanTable } from './huffman-table.js'\nimport { QuantizationTable } from './quantization-table.js'\nimport { ScanHeader } from './scan-header.js'\nimport { createArray } from './utils.js'\n\nconst littleEndian = (function () {\n  const buffer = new ArrayBuffer(2)\n  new DataView(buffer).setInt16(0, 256, true /* littleEndian */)\n  // Int16Array uses the platform's endianness.\n  return new Int16Array(buffer)[0] === 256\n})()\n\nexport class Decoder {\n  static IDCT_P = [\n    0, 5, 40, 16, 45, 2, 7, 42, 21, 56, 8, 61, 18, 47, 1, 4, 41, 23, 58, 13, 32, 24, 37, 10, 63, 17, 44, 3, 6, 43, 20,\n    57, 15, 34, 29, 48, 53, 26, 39, 9, 60, 19, 46, 22, 59, 12, 33, 31, 50, 55, 25, 36, 11, 62, 14, 35, 28, 49, 52, 27,\n    38, 30, 51, 54\n  ]\n\n  static TABLE = [\n    0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44,\n    53, 10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49,\n    57, 58, 62, 63\n  ]\n\n  static MAX_HUFFMAN_SUBTREE = 50\n  static MSB = 0x80000000\n  static RESTART_MARKER_BEGIN = 0xffd0\n  static RESTART_MARKER_END = 0xffd7\n\n  buffer: ArrayBuffer | null = null\n  stream: DataStream | null = null\n  frame = new FrameHeader()\n  huffTable = new HuffmanTable()\n  quantTable = new QuantizationTable()\n  scan = new ScanHeader()\n  DU: number[][][] = createArray(10, 4, 64) as number[][][] // at most 10 data units in a MCU, at most 4 data units in one component\n  HuffTab: number[][][] = createArray(4, 2, 50 * 256) as number[][][]\n  IDCT_Source: number[] = []\n  nBlock: number[] = [] // number of blocks in the i-th Comp in a scan\n  acTab: number[][] = createArray(10, 1) as number[][] // ac HuffTab for the i-th Comp in a scan\n  dcTab: number[][] = createArray(10, 1) as number[][] // dc HuffTab for the i-th Comp in a scan\n  qTab: number[][] = createArray(10, 1) as number[][] // quantization table for the i-th Comp in a scan\n  marker = 0\n  markerIndex = 0\n  numComp = 0\n  restartInterval = 0\n  selection = 0\n  xDim = 0\n  yDim = 0\n  xLoc = 0\n  yLoc = 0\n  outputData: Uint8Array | Uint16Array | null = null\n  restarting = false\n  mask = 0\n  numBytes = 0\n\n  precision: number | undefined = undefined\n  components: Array<typeof ComponentSpec> = []\n\n  getter: null | ((index: number, compOffset: number) => number) = null\n  setter: null | ((index: number, val: number, compOffset?: number) => void) = null\n  output: null | ((PRED: number[]) => void) = null\n  selector: null | ((compOffset?: number) => number) = null\n\n  /**\n   * The Decoder constructor.\n   * @property {number} numBytes - number of bytes per component\n   * @type {Function}\n   */\n  constructor(buffer?: ArrayBuffer | null, numBytes?: number) {\n    this.buffer = buffer ?? null\n    this.numBytes = numBytes ?? 0\n  }\n\n  /**\n   * Returns decompressed data.\n   */\n  decompress(buffer: ArrayBuffer, offset: number, length: number): ArrayBuffer {\n    const result = this.decode(buffer, offset, length)\n    return result.buffer\n  }\n\n  decode(buffer?: ArrayBuffer, offset?: number, length?: number, numBytes?: number) {\n    let scanNum = 0\n    const pred = []\n    let i\n    let compN\n    const temp = []\n    const index = []\n    let mcuNum\n\n    if (buffer) {\n      this.buffer = buffer\n    }\n\n    if (numBytes !== undefined) {\n      this.numBytes = numBytes\n    }\n\n    this.stream = new DataStream(this.buffer as ArrayBuffer, offset, length)\n    this.buffer = null\n\n    this.xLoc = 0\n    this.yLoc = 0\n    let current = this.stream.get16()\n\n    if (current !== 0xffd8) {\n      // SOI\n      throw new Error('Not a JPEG file')\n    }\n\n    current = this.stream.get16()\n\n    while (current >> 4 !== 0x0ffc || current === 0xffc4) {\n      // SOF 0~15\n      switch (current) {\n        case 0xffc4: // DHT\n          this.huffTable.read(this.stream, this.HuffTab)\n          break\n        case 0xffcc: // DAC\n          throw new Error(\"Program doesn't support arithmetic coding. (format throw new IOException)\")\n        case 0xffdb:\n          this.quantTable.read(this.stream, Decoder.TABLE)\n          break\n        case 0xffdd:\n          this.restartInterval = this.readNumber() ?? 0\n          break\n        case 0xffe0:\n        case 0xffe1:\n        case 0xffe2:\n        case 0xffe3:\n        case 0xffe4:\n        case 0xffe5:\n        case 0xffe6:\n        case 0xffe7:\n        case 0xffe8:\n        case 0xffe9:\n        case 0xffea:\n        case 0xffeb:\n        case 0xffec:\n        case 0xffed:\n        case 0xffee:\n        case 0xffef:\n          this.readApp()\n          break\n        case 0xfffe:\n          this.readComment()\n          break\n        default:\n          if (current >> 8 !== 0xff) {\n            throw new Error('ERROR: format throw new IOException! (decode)')\n          }\n      }\n\n      current = this.stream.get16()\n    }\n\n    if (current < 0xffc0 || current > 0xffc7) {\n      throw new Error('ERROR: could not handle arithmetic code!')\n    }\n\n    this.frame.read(this.stream)\n    current = this.stream.get16()\n\n    do {\n      while (current !== 0x0ffda) {\n        // SOS\n        switch (current) {\n          case 0xffc4: // DHT\n            this.huffTable.read(this.stream, this.HuffTab)\n            break\n          case 0xffcc: // DAC\n            throw new Error(\"Program doesn't support arithmetic coding. (format throw new IOException)\")\n          case 0xffdb:\n            this.quantTable.read(this.stream, Decoder.TABLE)\n            break\n          case 0xffdd:\n            this.restartInterval = this.readNumber() ?? 0\n            break\n          case 0xffe0:\n          case 0xffe1:\n          case 0xffe2:\n          case 0xffe3:\n          case 0xffe4:\n          case 0xffe5:\n          case 0xffe6:\n          case 0xffe7:\n          case 0xffe8:\n          case 0xffe9:\n          case 0xffea:\n          case 0xffeb:\n          case 0xffec:\n          case 0xffed:\n          case 0xffee:\n          case 0xffef:\n            this.readApp()\n            break\n          case 0xfffe:\n            this.readComment()\n            break\n          default:\n            if (current >> 8 !== 0xff) {\n              throw new Error('ERROR: format throw new IOException! (Parser.decode)')\n            }\n        }\n\n        current = this.stream.get16()\n      }\n\n      this.precision = this.frame.precision\n      this.components = this.frame.components\n\n      if (!this.numBytes) {\n        this.numBytes = Math.round(Math.ceil(this.precision / 8))\n      }\n\n      if (this.numBytes === 1) {\n        this.mask = 0xff\n      } else {\n        this.mask = 0xffff\n      }\n\n      this.scan.read(this.stream)\n      this.numComp = this.scan.numComp\n      this.selection = this.scan.selection\n\n      if (this.numBytes === 1) {\n        if (this.numComp === 3) {\n          this.getter = this.getValueRGB\n          this.setter = this.setValueRGB\n          this.output = this.outputRGB\n        } else {\n          this.getter = this.getValue8\n          this.setter = this.setValue8\n          this.output = this.outputSingle\n        }\n      } else {\n        this.getter = this.getValue8\n        this.setter = this.setValue8\n        this.output = this.outputSingle\n      }\n\n      switch (this.selection) {\n        case 2:\n          this.selector = this.select2\n          break\n        case 3:\n          this.selector = this.select3\n          break\n        case 4:\n          this.selector = this.select4\n          break\n        case 5:\n          this.selector = this.select5\n          break\n        case 6:\n          this.selector = this.select6\n          break\n        case 7:\n          this.selector = this.select7\n          break\n        default:\n          this.selector = this.select1\n          break\n      }\n\n      // this.scanComps = this.scan.components\n      // this.quantTables = this.quantTable.quantTables\n\n      for (i = 0; i < this.numComp; i += 1) {\n        compN = this.scan.components[i].scanCompSel\n        this.qTab[i] = this.quantTable.quantTables[this.components[compN].quantTableSel]\n        this.nBlock[i] = this.components[compN].vSamp * this.components[compN].hSamp\n        this.dcTab[i] = this.HuffTab[this.scan.components[i].dcTabSel][0]\n        this.acTab[i] = this.HuffTab[this.scan.components[i].acTabSel][1]\n      }\n\n      this.xDim = this.frame.dimX\n      this.yDim = this.frame.dimY\n      if (this.numBytes === 1) {\n        this.outputData = new Uint8Array(new ArrayBuffer(this.xDim * this.yDim * this.numBytes * this.numComp))\n      } else {\n        this.outputData = new Uint16Array(new ArrayBuffer(this.xDim * this.yDim * this.numBytes * this.numComp))\n      }\n\n      scanNum += 1\n\n      while (true) {\n        // Decode one scan\n        temp[0] = 0\n        index[0] = 0\n\n        for (i = 0; i < 10; i += 1) {\n          pred[i] = 1 << (this.precision - 1)\n        }\n\n        if (this.restartInterval === 0) {\n          current = this.decodeUnit(pred, temp, index)\n\n          while (current === 0 && this.xLoc < this.xDim && this.yLoc < this.yDim) {\n            this.output(pred)\n            current = this.decodeUnit(pred, temp, index)\n          }\n\n          break // current=MARKER\n        }\n\n        for (mcuNum = 0; mcuNum < this.restartInterval; mcuNum += 1) {\n          this.restarting = mcuNum === 0\n          current = this.decodeUnit(pred, temp, index)\n          this.output(pred)\n\n          if (current !== 0) {\n            break\n          }\n        }\n\n        if (current === 0) {\n          if (this.markerIndex !== 0) {\n            current = 0xff00 | this.marker\n            this.markerIndex = 0\n          } else {\n            current = this.stream.get16()\n          }\n        }\n\n        if (!(current >= Decoder.RESTART_MARKER_BEGIN && current <= Decoder.RESTART_MARKER_END)) {\n          break // current=MARKER\n        }\n      }\n\n      if (current === 0xffdc && scanNum === 1) {\n        // DNL\n        this.readNumber()\n        current = this.stream.get16()\n      }\n    } while (current !== 0xffd9 && this.xLoc < this.xDim && this.yLoc < this.yDim && scanNum === 0)\n\n    return this.outputData\n  }\n\n  decodeUnit(prev: number[], temp: number[], index: number[]): number {\n    if (this.numComp === 1) {\n      return this.decodeSingle(prev, temp, index)\n    } else if (this.numComp === 3) {\n      return this.decodeRGB(prev, temp, index)\n    } else {\n      return -1\n    }\n  }\n\n  select1(compOffset?: number) {\n    return this.getPreviousX(compOffset)\n  }\n\n  select2(compOffset?: number) {\n    return this.getPreviousY(compOffset)\n  }\n\n  select3(compOffset?: number) {\n    return this.getPreviousXY(compOffset)\n  }\n\n  select4(compOffset?: number) {\n    return this.getPreviousX(compOffset) + this.getPreviousY(compOffset) - this.getPreviousXY(compOffset)\n  }\n\n  select5(compOffset?: number) {\n    return this.getPreviousX(compOffset) + ((this.getPreviousY(compOffset) - this.getPreviousXY(compOffset)) >> 1)\n  }\n\n  select6(compOffset?: number) {\n    return this.getPreviousY(compOffset) + ((this.getPreviousX(compOffset) - this.getPreviousXY(compOffset)) >> 1)\n  }\n\n  select7(compOffset?: number) {\n    return (this.getPreviousX(compOffset) + this.getPreviousY(compOffset)) / 2\n  }\n\n  decodeRGB(prev: number[], temp: number[], index: number[]) {\n    if (this.selector === null) throw new Error(\"decode hasn't run yet\")\n\n    let actab, dctab, qtab, ctrC, i, k, j\n\n    prev[0] = this.selector(0)\n    prev[1] = this.selector(1)\n    prev[2] = this.selector(2)\n\n    for (ctrC = 0; ctrC < this.numComp; ctrC += 1) {\n      qtab = this.qTab[ctrC]\n      actab = this.acTab[ctrC]\n      dctab = this.dcTab[ctrC]\n      for (i = 0; i < this.nBlock[ctrC]; i += 1) {\n        for (k = 0; k < this.IDCT_Source.length; k += 1) {\n          this.IDCT_Source[k] = 0\n        }\n\n        let value = this.getHuffmanValue(dctab, temp, index)\n\n        if (value >= 0xff00) {\n          return value\n        }\n\n        prev[ctrC] = this.IDCT_Source[0] = prev[ctrC] + this.getn(index, value, temp, index)\n        this.IDCT_Source[0] *= qtab[0]\n\n        for (j = 1; j < 64; j += 1) {\n          value = this.getHuffmanValue(actab, temp, index)\n\n          if (value >= 0xff00) {\n            return value\n          }\n\n          j += value >> 4\n\n          if ((value & 0x0f) === 0) {\n            if (value >> 4 === 0) {\n              break\n            }\n          } else {\n            this.IDCT_Source[Decoder.IDCT_P[j]] = this.getn(index, value & 0x0f, temp, index) * qtab[j]\n          }\n        }\n      }\n    }\n\n    return 0\n  }\n\n  decodeSingle(prev: number[], temp: number[], index: number[]) {\n    if (this.selector === null) throw new Error(\"decode hasn't run yet\")\n\n    let value, i, n, nRestart\n\n    if (this.restarting) {\n      this.restarting = false\n      prev[0] = 1 << (this.frame.precision - 1)\n    } else {\n      prev[0] = this.selector()\n    }\n\n    for (i = 0; i < this.nBlock[0]; i += 1) {\n      value = this.getHuffmanValue(this.dcTab[0], temp, index)\n      if (value >= 0xff00) {\n        return value\n      }\n\n      n = this.getn(prev, value, temp, index)\n      nRestart = n >> 8\n\n      if (nRestart >= Decoder.RESTART_MARKER_BEGIN && nRestart <= Decoder.RESTART_MARKER_END) {\n        return nRestart\n      }\n\n      prev[0] += n\n    }\n\n    return 0\n  }\n\n  //\tHuffman table for fast search: (HuffTab) 8-bit Look up table 2-layer search architecture, 1st-layer represent 256 node (8 bits) if codeword-length > 8\n  //\tbits, then the entry of 1st-layer = (# of 2nd-layer table) | MSB and it is stored in the 2nd-layer Size of tables in each layer are 256.\n  //\tHuffTab[*][*][0-256] is always the only 1st-layer table.\n  //\n  //\tAn entry can be: (1) (# of 2nd-layer table) | MSB , for code length > 8 in 1st-layer (2) (Code length) << 8 | HuffVal\n  //\n  //\tHuffmanValue(table   HuffTab[x][y] (ex) HuffmanValue(HuffTab[1][0],...)\n  //\t                ):\n  //\t    return: Huffman Value of table\n  //\t            0xFF?? if it receives a MARKER\n  //\t    Parameter:  table   HuffTab[x][y] (ex) HuffmanValue(HuffTab[1][0],...)\n  //\t                temp    temp storage for remainded bits\n  //\t                index   index to bit of temp\n  //\t                in      FILE pointer\n  //\t    Effect:\n  //\t        temp  store new remainded bits\n  //\t        index change to new index\n  //\t        in    change to new position\n  //\t    NOTE:\n  //\t      Initial by   temp=0; index=0;\n  //\t    NOTE: (explain temp and index)\n  //\t      temp: is always in the form at calling time or returning time\n  //\t       |  byte 4  |  byte 3  |  byte 2  |  byte 1  |\n  //\t       |     0    |     0    | 00000000 | 00000??? |  if not a MARKER\n  //\t                                               ^index=3 (from 0 to 15)\n  //\t                                               321\n  //\t    NOTE (marker and marker_index):\n  //\t      If get a MARKER from 'in', marker=the low-byte of the MARKER\n  //\t        and marker_index=9\n  //\t      If marker_index=9 then index is always > 8, or HuffmanValue()\n  //\t        will not be called\n  getHuffmanValue(table: number[], temp: number[], index: number[]): number {\n    let code, input\n    const mask = 0xffff\n\n    if (!this.stream) throw new Error('stream not initialized')\n\n    if (index[0] < 8) {\n      temp[0] <<= 8\n      input = this.stream.get8()\n      if (input === 0xff) {\n        this.marker = this.stream.get8()\n        if (this.marker !== 0) {\n          this.markerIndex = 9\n        }\n      }\n      temp[0] |= input\n    } else {\n      index[0] -= 8\n    }\n\n    code = table[temp[0] >> index[0]]\n\n    if ((code & Decoder.MSB) !== 0) {\n      if (this.markerIndex !== 0) {\n        this.markerIndex = 0\n        return 0xff00 | this.marker\n      }\n\n      temp[0] &= mask >> (16 - index[0])\n      temp[0] <<= 8\n      input = this.stream.get8()\n\n      if (input === 0xff) {\n        this.marker = this.stream.get8()\n        if (this.marker !== 0) {\n          this.markerIndex = 9\n        }\n      }\n\n      temp[0] |= input\n      code = table[(code & 0xff) * 256 + (temp[0] >> index[0])]\n      index[0] += 8\n    }\n\n    index[0] += 8 - (code >> 8)\n\n    if (index[0] < 0) {\n      throw new Error('index=' + index[0] + ' temp=' + temp[0] + ' code=' + code + ' in HuffmanValue()')\n    }\n\n    if (index[0] < this.markerIndex) {\n      this.markerIndex = 0\n      return 0xff00 | this.marker\n    }\n\n    temp[0] &= mask >> (16 - index[0])\n    return code & 0xff\n  }\n\n  getn(PRED: number[], n: number, temp: number[], index: number[]) {\n    let result, input\n    const one = 1\n    const n_one = -1\n    const mask = 0xffff\n\n    if (this.stream === null) throw new Error('stream not initialized')\n\n    if (n === 0) {\n      return 0\n    }\n\n    if (n === 16) {\n      if (PRED[0] >= 0) {\n        return -32768\n      } else {\n        return 32768\n      }\n    }\n\n    index[0] -= n\n\n    if (index[0] >= 0) {\n      if (index[0] < this.markerIndex && !this.isLastPixel()) {\n        // this was corrupting the last pixel in some cases\n        this.markerIndex = 0\n        return (0xff00 | this.marker) << 8\n      }\n\n      result = temp[0] >> index[0]\n      temp[0] &= mask >> (16 - index[0])\n    } else {\n      temp[0] <<= 8\n      input = this.stream.get8()\n\n      if (input === 0xff) {\n        this.marker = this.stream.get8()\n        if (this.marker !== 0) {\n          this.markerIndex = 9\n        }\n      }\n\n      temp[0] |= input\n      index[0] += 8\n\n      if (index[0] < 0) {\n        if (this.markerIndex !== 0) {\n          this.markerIndex = 0\n          return (0xff00 | this.marker) << 8\n        }\n\n        temp[0] <<= 8\n        input = this.stream.get8()\n\n        if (input === 0xff) {\n          this.marker = this.stream.get8()\n          if (this.marker !== 0) {\n            this.markerIndex = 9\n          }\n        }\n\n        temp[0] |= input\n        index[0] += 8\n      }\n\n      if (index[0] < 0) {\n        throw new Error('index=' + index[0] + ' in getn()')\n      }\n\n      if (index[0] < this.markerIndex) {\n        this.markerIndex = 0\n        return (0xff00 | this.marker) << 8\n      }\n\n      result = temp[0] >> index[0]\n      temp[0] &= mask >> (16 - index[0])\n    }\n\n    if (result < one << (n - 1)) {\n      result += (n_one << n) + 1\n    }\n\n    return result\n  }\n\n  getPreviousX(compOffset = 0): number {\n    if (this.getter === null) throw new Error(\"decode hasn't run yet\")\n\n    if (this.xLoc > 0) {\n      return this.getter(this.yLoc * this.xDim + this.xLoc - 1, compOffset)\n    } else if (this.yLoc > 0) {\n      return this.getPreviousY(compOffset)\n    } else {\n      return 1 << (this.frame.precision - 1)\n    }\n  }\n\n  getPreviousXY(compOffset = 0) {\n    if (this.getter === null) throw new Error(\"decode hasn't run yet\")\n\n    if (this.xLoc > 0 && this.yLoc > 0) {\n      return this.getter((this.yLoc - 1) * this.xDim + this.xLoc - 1, compOffset)\n    } else {\n      return this.getPreviousY(compOffset)\n    }\n  }\n\n  getPreviousY(compOffset = 0) {\n    if (this.getter === null) throw new Error(\"decode hasn't run yet\")\n\n    if (this.yLoc > 0) {\n      return this.getter((this.yLoc - 1) * this.xDim + this.xLoc, compOffset)\n    } else {\n      return this.getPreviousX(compOffset)\n    }\n  }\n\n  isLastPixel() {\n    return this.xLoc === this.xDim - 1 && this.yLoc === this.yDim - 1\n  }\n\n  outputSingle(PRED: number[]) {\n    if (this.setter === null) throw new Error(\"decode hasn't run yet\")\n\n    if (this.xLoc < this.xDim && this.yLoc < this.yDim) {\n      this.setter(this.yLoc * this.xDim + this.xLoc, this.mask & PRED[0])\n\n      this.xLoc += 1\n\n      if (this.xLoc >= this.xDim) {\n        this.yLoc += 1\n        this.xLoc = 0\n      }\n    }\n  }\n\n  outputRGB(PRED: number[]) {\n    if (this.setter === null) throw new Error(\"decode hasn't run yet\")\n\n    const offset = this.yLoc * this.xDim + this.xLoc\n\n    if (this.xLoc < this.xDim && this.yLoc < this.yDim) {\n      this.setter(offset, PRED[0], 0)\n      this.setter(offset, PRED[1], 1)\n      this.setter(offset, PRED[2], 2)\n\n      this.xLoc += 1\n\n      if (this.xLoc >= this.xDim) {\n        this.yLoc += 1\n        this.xLoc = 0\n      }\n    }\n  }\n\n  setValue8(index: number, val: number) {\n    if (!this.outputData) throw new Error('output data not ready')\n\n    if (littleEndian) {\n      this.outputData[index] = val\n    } else {\n      this.outputData[index] = ((val & 0xff) << 8) | ((val >> 8) & 0xff)\n    }\n  }\n\n  getValue8(index: number) {\n    if (this.outputData === null) throw new Error('output data not ready')\n    if (littleEndian) {\n      return this.outputData[index] // mask should not be necessary because outputData is either Int8Array or Int16Array\n    } else {\n      const val = this.outputData[index]\n      return ((val & 0xff) << 8) | ((val >> 8) & 0xff)\n    }\n  }\n\n  setValueRGB(index: number, val: number, compOffset = 0) {\n    if (this.outputData === null) return\n    this.outputData[index * 3 + compOffset] = val\n  }\n\n  getValueRGB(index: number, compOffset: number) {\n    if (this.outputData === null) throw new Error('output data not ready')\n    return this.outputData[index * 3 + compOffset]\n  }\n\n  readApp() {\n    if (this.stream === null) return null\n\n    let count = 0\n    const length = this.stream.get16()\n    count += 2\n\n    while (count < length) {\n      this.stream.get8()\n      count += 1\n    }\n\n    return length\n  }\n\n  readComment() {\n    if (this.stream === null) return null\n\n    let sb = ''\n    let count = 0\n\n    const length = this.stream.get16()\n    count += 2\n\n    while (count < length) {\n      sb += this.stream.get8()\n      count += 1\n    }\n\n    return sb\n  }\n\n  readNumber() {\n    if (this.stream === null) return null\n\n    const Ld = this.stream.get16()\n\n    if (Ld !== 4) {\n      throw new Error('ERROR: Define number format throw new IOException [Ld!=4]')\n    }\n\n    return this.stream.get16()\n  }\n}\n"],"mappings":"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","names":["main_exports","__export","ComponentSpec","DataStream","Decoder","FrameHeader","HuffmanTable","QuantizationTable","ScanComponent","ScanHeader","utils_exports","__toCommonJS","ComponentSpec","DataStream","data","offset","length","value","FrameHeader","data","count","temp","length","c","ComponentSpec","utils_exports","__export","crc32","crcTable","createArray","makeCRCTable","dimensions","dim","rest","newArray","i","c","n","k","buffer","uint8view","crc","HuffmanTable","_HuffmanTable","createArray","data","HuffTab","count","temp","t","c","i","j","length","tab","L","V","currentTable","k","n","QuantizationTable","_QuantizationTable","createArray","qtab","table","i","data","count","temp","t","length","ScanComponent","ScanHeader","data","count","i","temp","length","ScanComponent","littleEndian","buffer","Decoder","_Decoder","FrameHeader","HuffmanTable","QuantizationTable","ScanHeader","createArray","numBytes","offset","length","scanNum","pred","i","compN","temp","index","mcuNum","DataStream","current","prev","compOffset","actab","dctab","qtab","ctrC","k","j","value","nRestart","table","code","input","PRED","n","result","val","count","sb"]}